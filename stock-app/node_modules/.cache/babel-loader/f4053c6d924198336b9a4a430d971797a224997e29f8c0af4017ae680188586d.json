{"ast":null,"code":"app.post('/login', (req, res) => {\n  const {\n    username,\n    password\n  } = req.body;\n  const query = 'SELECT * FROM users WHERE username = ?';\n  db.query(query, [username], (err, results) => {\n    if (err) {\n      console.error('Database error during login:', err); // Log the exact error\n      return res.status(500).json({\n        error: 'Database error during login'\n      });\n    }\n    if (results.length === 0) {\n      console.log('User not found'); // Log if user is not found\n      return res.status(400).json({\n        error: 'User not found'\n      });\n    }\n    const user = results[0];\n\n    // Compare entered password with stored hashed password\n    bcrypt.compare(password, user.password, (err, isMatch) => {\n      if (err) {\n        console.error('Error comparing passwords:', err); // Log error if password comparison fails\n        return res.status(500).json({\n          error: 'Error comparing passwords'\n        });\n      }\n      if (!isMatch) {\n        console.log('Invalid password'); // Log if passwords do not match\n        return res.status(401).json({\n          error: 'Invalid password'\n        });\n      }\n\n      // Generate JWT token on successful login\n      const token = jwt.sign({\n        user_id: user.user_id\n      }, SECRET_KEY, {\n        expiresIn: '1h'\n      });\n      res.json({\n        token,\n        user_id: user.user_id\n      });\n    });\n  });\n});","map":{"version":3,"names":["app","post","req","res","username","password","body","query","db","err","results","console","error","status","json","length","log","user","bcrypt","compare","isMatch","token","jwt","sign","user_id","SECRET_KEY","expiresIn"],"sources":["/Users/bryangonsalves/Desktop/Educative/Courses/React/stock-market-app/stock-app/src/pages/Login.js"],"sourcesContent":["app.post('/login', (req, res) => {\n    const { username, password } = req.body;\n  \n    const query = 'SELECT * FROM users WHERE username = ?';\n    db.query(query, [username], (err, results) => {\n      if (err) {\n        console.error('Database error during login:', err);  // Log the exact error\n        return res.status(500).json({ error: 'Database error during login' });\n      }\n      if (results.length === 0) {\n        console.log('User not found');  // Log if user is not found\n        return res.status(400).json({ error: 'User not found' });\n      }\n  \n      const user = results[0];\n  \n      // Compare entered password with stored hashed password\n      bcrypt.compare(password, user.password, (err, isMatch) => {\n        if (err) {\n          console.error('Error comparing passwords:', err);  // Log error if password comparison fails\n          return res.status(500).json({ error: 'Error comparing passwords' });\n        }\n        if (!isMatch) {\n          console.log('Invalid password');  // Log if passwords do not match\n          return res.status(401).json({ error: 'Invalid password' });\n        }\n  \n        // Generate JWT token on successful login\n        const token = jwt.sign({ user_id: user.user_id }, SECRET_KEY, { expiresIn: '1h' });\n        res.json({ token, user_id: user.user_id });\n      });\n    });\n  });\n  "],"mappings":"AAAAA,GAAG,CAACC,IAAI,CAAC,QAAQ,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC7B,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGH,GAAG,CAACI,IAAI;EAEvC,MAAMC,KAAK,GAAG,wCAAwC;EACtDC,EAAE,CAACD,KAAK,CAACA,KAAK,EAAE,CAACH,QAAQ,CAAC,EAAE,CAACK,GAAG,EAAEC,OAAO,KAAK;IAC5C,IAAID,GAAG,EAAE;MACPE,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEH,GAAG,CAAC,CAAC,CAAE;MACrD,OAAON,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEF,KAAK,EAAE;MAA8B,CAAC,CAAC;IACvE;IACA,IAAIF,OAAO,CAACK,MAAM,KAAK,CAAC,EAAE;MACxBJ,OAAO,CAACK,GAAG,CAAC,gBAAgB,CAAC,CAAC,CAAE;MAChC,OAAOb,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEF,KAAK,EAAE;MAAiB,CAAC,CAAC;IAC1D;IAEA,MAAMK,IAAI,GAAGP,OAAO,CAAC,CAAC,CAAC;;IAEvB;IACAQ,MAAM,CAACC,OAAO,CAACd,QAAQ,EAAEY,IAAI,CAACZ,QAAQ,EAAE,CAACI,GAAG,EAAEW,OAAO,KAAK;MACxD,IAAIX,GAAG,EAAE;QACPE,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEH,GAAG,CAAC,CAAC,CAAE;QACnD,OAAON,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEF,KAAK,EAAE;QAA4B,CAAC,CAAC;MACrE;MACA,IAAI,CAACQ,OAAO,EAAE;QACZT,OAAO,CAACK,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAE;QAClC,OAAOb,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAEF,KAAK,EAAE;QAAmB,CAAC,CAAC;MAC5D;;MAEA;MACA,MAAMS,KAAK,GAAGC,GAAG,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAEP,IAAI,CAACO;MAAQ,CAAC,EAAEC,UAAU,EAAE;QAAEC,SAAS,EAAE;MAAK,CAAC,CAAC;MAClFvB,GAAG,CAACW,IAAI,CAAC;QAAEO,KAAK;QAAEG,OAAO,EAAEP,IAAI,CAACO;MAAQ,CAAC,CAAC;IAC5C,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}