{"ast":null,"code":"var _jsxFileName = \"/Users/bryangonsalves/Desktop/Educative/Courses/React/stock-market-app/stock-app/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setUser\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('http://localhost/login.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.user_id) {\n        setUser(data.user_id);\n        alert(\"Login successful\");\n        navigate('/'); // Redirect to home or stocks page after login\n      } else {\n        setError(data.error || 'Invalid login credentials');\n      }\n    } catch (error) {\n      setError('Something went wrong. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      children: loading ? 'Logging in...' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"EO9tUI5yyT7by/QINd9DsZEVexw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","setUser","_s","username","setUsername","password","setPassword","loading","setLoading","error","setError","navigate","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","user_id","alert","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["/Users/bryangonsalves/Desktop/Educative/Courses/React/stock-market-app/stock-app/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = ({ setUser }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const navigate = useNavigate();\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setError('');\n        \n        try {\n            const response = await fetch('http://localhost/login.php', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ username, password }),\n            });\n            const data = await response.json();\n\n            if (data.user_id) {\n                setUser(data.user_id);\n                alert(\"Login successful\");\n                navigate('/'); // Redirect to home or stocks page after login\n            } else {\n                setError(data.error || 'Invalid login credentials');\n            }\n        } catch (error) {\n            setError('Something went wrong. Please try again.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <form onSubmit={handleLogin} className=\"login-form\">\n            <h2>Login</h2>\n            {error && <p className=\"error\">{error}</p>}\n            <input \n                type=\"text\" \n                placeholder=\"Username\" \n                value={username} \n                onChange={(e) => setUsername(e.target.value)} \n                required\n            />\n            <input \n                type=\"password\" \n                placeholder=\"Password\" \n                value={password} \n                onChange={(e) => setPassword(e.target.value)} \n                required \n            />\n            <button type=\"submit\" disabled={loading}>\n                {loading ? 'Logging in...' : 'Login'}\n            </button>\n        </form>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;QACvDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAElB,QAAQ;UAAEE;QAAS,CAAC;MAC/C,CAAC,CAAC;MACF,MAAMiB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QACdvB,OAAO,CAACqB,IAAI,CAACE,OAAO,CAAC;QACrBC,KAAK,CAAC,kBAAkB,CAAC;QACzBd,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACnB,CAAC,MAAM;QACHD,QAAQ,CAACY,IAAI,CAACb,KAAK,IAAI,2BAA2B,CAAC;MACvD;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZC,QAAQ,CAAC,yCAAyC,CAAC;IACvD,CAAC,SAAS;MACNF,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIT,OAAA;IAAM2B,QAAQ,EAAEd,WAAY;IAACe,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAC/C7B,OAAA;MAAA6B,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbvB,KAAK,iBAAIV,OAAA;MAAG4B,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEnB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CjC,OAAA;MACIkC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEhC,QAAS;MAChBiC,QAAQ,EAAGvB,CAAC,IAAKT,WAAW,CAACS,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;MAC7CG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFjC,OAAA;MACIkC,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE9B,QAAS;MAChB+B,QAAQ,EAAGvB,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACwB,MAAM,CAACF,KAAK,CAAE;MAC7CG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFjC,OAAA;MAAQkC,IAAI,EAAC,QAAQ;MAACM,QAAQ,EAAEhC,OAAQ;MAAAqB,QAAA,EACnCrB,OAAO,GAAG,eAAe,GAAG;IAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEf,CAAC;AAAC9B,EAAA,CAzDIF,KAAK;EAAA,QAKUH,WAAW;AAAA;AAAA2C,EAAA,GAL1BxC,KAAK;AA2DX,eAAeA,KAAK;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}